package ua.nure.zharkov.Task2;

public class Matrix {
	
	protected double[][] matrix;
	protected int rows;
	protected int cols;
	
	public Matrix(double[][] ar) {
		rows = ar.length;
		cols = ar[0].length;	
		matrix = new double[rows][cols];
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < cols; ++j) {
				matrix[i][j] = ar[i][j];
			}
		}
	}
	
	public int getColumns() {
		return cols;
	}
	
	public int getRows() {
		return rows;
	}
	
	public double at(int row, int col) {
		if(row < 0 || row >= matrix.length || col < 0 || col >= matrix[0].length) {
			throw new java.lang.IndexOutOfBoundsException();
		}
		return matrix[row][col];
	}
	
	public void add(Matrix m) { 
		if(cols != m.getColumns() || rows != m.getRows()) {
			System.out.println("Matrices had different sizes");
			return;
		}
		
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < cols; ++j) {
				matrix[i][j] += m.at(i, j);
			}
		}
		
	}
	
	public void mul(double x) {
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < cols; ++j) {
				matrix[i][j] *= x;
			}
		}
	}
	
	public void mul(Matrix m) {
		if(cols != m.getRows()) {
			throw new java.lang.IllegalArgumentException();
		}
		
		double[][] temp = new double[rows][m.getColumns()];
		
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < m.getColumns(); ++j) {
				double value = 0;
				for(int k = 0; k < cols; ++k) {
					value += matrix[i][k] * m.at(k, j);
				}
				temp[i][j] = value;
			}
		}		
		cols = m.getColumns();
		matrix = temp;
	}
	
	public void transpose() {
		double[][] temp = new double[cols][rows];
		
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < cols; ++j) {
				temp[j][i] = matrix[i][j];
			}
		}
		
		int temporary = cols;
		cols = rows;
		rows = temporary;
		
		matrix = temp;
	}
	
	public void print() {
		for(int i = 0; i < rows; ++i) {
			for(int j = 0; j < cols; ++j) {
				System.out.print(matrix[i][j]);
				if(j < cols - 1) {
					System.out.print(" ");
				}
			}
			System.out.print("\n");
		}
	}

	public static void main(String[] args) {
		Matrix mat1 = new Matrix(new double[][] {
	        {1.0, 2.0, 3.0},
	        {4.0, 5.0, 6.0}
	    });
	 
	    Matrix mat2 = new Matrix(new double[][] {
	        {1.0, 2.0, 3.0},
	        {4.0, 5.0, 6.0}
	    });
	 
	    System.out.println("~~~ mat1");
	    mat1.print();
	 
	    System.out.println("~~~ mat2");
	    mat2.print();
	 
	    System.out.println("~~~ transpose mat1");
	    mat1.transpose();
	    mat1.print();
	 
	    System.out.println("~~~ mul mat1 on mat2");
	    mat1.mul(mat2);
	    mat1.print();
	 
	    System.out.println("~~~ mul mat2 on 2");
	    mat2.mul(2);
	    mat2.print();
	}

}
